
R version 4.5.1 (2025-06-13) -- "Great Square Root"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> options(digits=3)
> png(filename="simulate-%02d.png",res=100)
> 
> library(pomp)
> library(dplyr)

Attaching package: 'dplyr'

The following objects are masked from 'package:stats':

    filter, lag

The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union

> 
> set.seed(1041414791L)
> 
> ou2() -> ou2
> ou2 |> simulate(times=0:20,t0=-4,seed=298831503) |> plot()
> 
> try(simulate(rprocess=onestep(Csnippet("z = runif(0,1);")),
+   rmeasure=Csnippet("w = rnorm(z,1);"),
+   rinit=Csnippet("z = 0;"),
+   statenames="z",obsnames="w"))
Error : in 'simulate': 'times' should either be a numeric vector of observation times or a single name identifying the column of data that represents the observation times.
> try(simulate(times=1:10,
+   rprocess=onestep(Csnippet("z = runif(0,1);")),
+   rmeasure=Csnippet("w = rnorm(z,1);"),
+   rinit=Csnippet("z = 0;"),
+   statenames="z",obsnames="w"))
Error : in 'simulate': 't0' is a required argument.
> try(simulate(times=c(1:5,NA,7:10),t0=0,
+   rprocess=onestep(Csnippet("z = runif(0,1);")),
+   rmeasure=Csnippet("w = rnorm(z,1);"),
+   rinit=Csnippet("z = 0;"),
+   statenames="z",obsnames="w"))
Error : in 'simulate': 'times' must be a non-decreasing sequence of numbers.
> try(simulate(times=NULL,t0=0,
+   rprocess=onestep(Csnippet("z = runif(0,1);")),
+   rmeasure=Csnippet("w = rnorm(z,1);"),
+   rinit=Csnippet("z = 0;"),
+   statenames="z",obsnames="w"))
Error : in 'simulate': 'times' should either be a numeric vector of observation times or a single name identifying the column of data that represents the observation times.
> try(simulate(times=1:10,t0=NA,
+   rprocess=onestep(Csnippet("z = runif(0,1);")),
+   rmeasure=Csnippet("w = rnorm(z,1);"),
+   rinit=Csnippet("z = 0;"),
+   statenames="z",obsnames="w"))
Error : in 'simulate': 't0' must be a single number not greater than 'times[1]'.
> try(simulate(times=1:10,t0=NULL,
+   rprocess=onestep(Csnippet("z = runif(0,1);")),
+   rmeasure=Csnippet("w = rnorm(z,1);"),
+   rinit=Csnippet("z = 0;"),
+   statenames="z",obsnames="w"))
Error : in 'simulate': 't0' must be a single number not greater than 'times[1]'.
> 
> simulate(times=1:100,t0=0,seed=450738202,
+   rprocess=onestep(Csnippet("z = runif(z-0.5,z+0.5);")),
+   rmeasure=Csnippet("w = rnorm(z,1);"),
+   rinit=Csnippet("z = 0;"),
+   statenames="z",obsnames="w") |> plot()
> 
> try(simulate(times=1:100,t0=0,
+   rmeasure=Csnippet("w = rnorm(z,1);"),
+   rinit=Csnippet("z = 0;"),
+   statenames="z",obsnames="w"))
Error : in 'simulate': 'rprocess' is undefined.
> 
> simulate(times=1:100,t0=0,
+   rprocess=onestep(function(z,...) {
+     c(z=runif(1,z-0.5,z+0.5))
+   }),
+   rmeasure=function(z,...) {
+     c(w = rnorm(1,z,1))
+   },params=c(z.0=0))
<object of class 'pomp'>
> 
> stopifnot(
+   {
+     simulate(times=1:100,t0=0,
+       rprocess=onestep(function(z,...) {
+         c(z=runif(1,z-0.5,z+0.5))
+       }),params=c(z.0=0)) |> obs() -> y
+     dim(y)==c(0,100)
+   }
+ )
Warning message:
'rmeasure' unspecified: NAs generated. 
> 
> stopifnot(
+   {
+     simulate(times=1:100,t0=0,
+       rprocess=onestep(function(z,...) {
+         c(z=runif(1,z-0.5,z+0.5))
+       }),params=c(z.0=0),format="arrays") -> s
+     dim(s$states)==c(1,1,100)
+     dim(s$obs)==c(0,1,100)
+   }
+ )
Warning message:
'rmeasure' unspecified: NAs generated. 
> 
> try(simulate(times=1:100,t0=0,
+   rprocess=euler(function(w,z,...,delta.t) c(w,z),delta.t=0.1),
+   params=c(w_0=1,z_0=3)))
Error : in 'simulate': 'rprocess' must return a named numeric vector.
> 
> try(simulate(times=1:100,t0=0,
+   rprocess=euler(function(w,z,...,delta.t) c(w=w,z),delta.t=0.1),
+   params=c(w_0=1,z_0=3)))
Error : in 'simulate': variable 'z' not found among the state variables.
> 
> try(simulate(times=1:100,t0=0,
+   rprocess=onestep(Csnippet("z = runif(z-0.5,z+0.5);")),
+   rmeasure=function(t,z,...) c(w=rnorm(n=t,z,1)),
+   rinit=Csnippet("z = 2;"),
+   statenames="z"))
Error : in 'simulate': 'rmeasure' returns variable-length results.
> 
> simulate(times=1:100,t0=0,seed=993523767,
+   rprocess=onestep(Csnippet("z = runif(z-0.5,z+0.5);")),
+   rmeasure=function(z,...) c(w=rnorm(1,z,1)),
+   rinit=Csnippet("z = 0;"),
+   statenames="z") -> po
> po |> plot()
> 
> simulate(times=1:100,t0=0,seed=378047885,
+   rprocess=onestep(function(z,...)
+     c(z=runif(n=1,z-0.5,z+0.5))),
+   rmeasure=function(z,...) c(w=rnorm(1,z,1)),
+   rinit=function(params,t0,...)c(z=0)) |> plot()
> 
> rm(.Random.seed)
> po |>
+   simulate(params=as.list(coef(po)),seed=406214171) |>
+   plot(variables=rep(c("z","w"),10),main="test",yax.flip=TRUE)
> 
> set.seed(1041414791L)
> 
> data.frame(u=1:10,v=runif(10)) |>
+   pomp(times="u",t0=0) |>
+   simulate(rprocess=onestep(Csnippet("w = runif(0,1);")),
+     rmeasure=function(w,...){
+       p <- w+c(-0.5,0.5)
+       c(y=runif(n=1,p[1],p[2]))
+     },
+     rinit=Csnippet("w=0;"),
+     statenames="w") |>
+   obs() |>
+   rownames()
[1] "y"
> 
> data.frame(u=1:10,v=runif(10)) |>
+   pomp(times="u",t0=0) |>
+   simulate(rprocess=onestep(Csnippet("w = runif(0,1);")),
+     rmeasure=Csnippet("y=runif(w-0.5,w+0.5);"),
+     rinit=Csnippet("w=0;"),
+     statenames="w",obsnames="y") |>
+   obs() |>
+   rownames()
[1] "y"
> 
> try(simulate(ou2,nsim=-3))
Error : in 'simulate': 'nsim' must be a positive integer.
> try(simulate(ou2,nsim=NA))
Error : in 'simulate': 'nsim' must be a positive integer.
> try(simulate(ou2,nsim=NULL))
Error : in 'simulate': 'nsim' must be a positive integer.
> try(simulate(ou2,nsim="bob"))
Error : in 'simulate': 'nsim' must be a positive integer.
> 
> ou2 |> window(end=3) -> po
> simulate(po,format="data.frame",seed=49569969,nsim=3) |>
+   count(.id) |> as.data.frame()
  .id n
1   1 3
2   2 3
3   3 3
> simulate(po,format="data.frame",seed=49569969,nsim=3,include.data=TRUE) |>
+   count(.id) |> as.data.frame()
   .id n
1 data 3
2    1 3
3    2 3
4    3 3
> simulate(po,format="data.frame",seed=49569969)
  time .id      x1   x2     y1   y2
1    1   1 -1.5048 6.11 -1.033 6.49
2    2   1 -0.6614 4.80 -0.486 3.18
3    3   1  0.0843 5.75  2.609 3.41
> simulate(po,format="data.frame",include.data=TRUE,seed=49569969)
  time  .id     y1   y2      x1   x2
1    1 data -4.051 4.78 -3.7185 4.25
2    2 data  1.835 6.27  0.9404 6.84
3    3 data -1.317 7.56 -0.3726 7.59
4    1    1 -1.033 6.49 -1.5048 6.11
5    2    1 -0.486 3.18 -0.6614 4.80
6    3    1  2.609 3.41  0.0843 5.75
> simulate(po,format="arrays") -> s
> s$states |> rownames()
[1] "x1" "x2"
> s$obs |> rownames()
[1] "y1" "y2"
> simulate(po,nsim=3) |> show()
[[1]]
<object of class 'pomp'>

[[2]]
<object of class 'pomp'>

[[3]]
<object of class 'pomp'>

> 
> data.frame(u=1:10,v=runif(10)) |>
+   pomp(times="u",t0=0) |>
+   simulate(rprocess=onestep(Csnippet("w = runif(0,1);")),
+     rmeasure=Csnippet("y=runif(w-0.5,w+0.5);"),
+     rinit=Csnippet("w=0;"),
+     statenames="w",obsnames="y",format="data.frame",include.data=TRUE) -> dat
> dat |> names()
[1] "u"   ".id" "v"   "w"   "y"  
> dat |> dim()
[1] 20  5
> 
> rw2() -> rw2
> simulate(rw2,accumvars="x2") |> plot()
> try(simulate(rw2,params=c(a="bob",b="nancy")))
Error : in 'simulate': 'params' must be named and numeric.
> 
> simulate(rw2,times=c(1:5,5,5),format="d",seed=49569969) -> x
> stopifnot(with(x,c(x1[6:7]==x1[5],x2[6:7]==x2[5],time[6:7]==time[5],
+   y1[6:7]!=y1[5],y2[6:7]!=y2[5])))
> 
> simulate(rw2,rinit=function(...) c(x1=0,x2=0)) -> x
> 
> library(tidyr)
> dacca() |>
+   simulate(nsim=2,include.data=TRUE,format="data.frame") -> dat
> dat |>
+   select(time,.id,seas_1,seas_2) |>
+   arrange(time,.id) |>
+   head(6)
  time  .id seas_1 seas_2
1 1891 data  0.666  0.167
2 1891    1  0.666  0.167
3 1891    2  0.666  0.167
4 1891 data  0.479  0.479
5 1891    1  0.479  0.479
6 1891    2  0.479  0.479
> dat |>
+   pivot_longer(-.id) |>
+   group_by(.id,name) |>
+   summarize(n=sum(is.na(value)),.groups="drop") |>
+   filter(n>0) -> d1
> stopifnot(
+   `na in sim`=all(d1$.id=="data"),
+   full=all(d1$n==600)
+ )
> 
> dev.off()
null device 
          1 
> 
