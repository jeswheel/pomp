
R version 4.4.2 (2024-10-31) -- "Pile of Leaves"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> options(digits=3)
> png(filename="nlf-%02d.png",res=100)
> 
> library(pomp)
> 
> set.seed(583615606L)
> 
> ou2() -> ou2
> estnames=c("alpha_2","alpha_3")
> ou2 |> window(end=40) |> as.data.frame() |>
+   subset(select=c(time,y1,y2)) -> dat
> guess <- coef(ou2,estnames,transform=TRUE)
> 
> try(nlf_objfun())
Error : in 'nlf_objfun': 'data' is a required argument.
> try(nlf_objfun("bob"))
Error : 'nlf_objfun' is undefined for 'data' of class 'character'.
> 
> dat |>
+   nlf_objfun(times="time",t0=0,params=coef(ou2),
+     lags=c(4,6),ti=100,tf=2000,seed=426094906L,
+     rprocess=ou2@rprocess,rmeasure=ou2@rmeasure,rinit=ou2@rinit) -> m0
> 
> m0()
[1] 199
> stopifnot(m0(0)==m0(1))
> stopifnot(logLik(m0)==-m0(0))
> 
> m2 <- nlf_objfun(m0,est=estnames,seed=426094906L)
> plot(sapply(seq(-1,1,by=0.1),function(x)m2(c(x,0))))
> 
> library(subplex)
> m2(guess) -> ll
> stopifnot(logLik(m2)==-ll)
> subplex(par=guess,fn=m2,control=list(reltol=1e-3)) -> out
> stopifnot(out$convergence == 0)
> m2(out$par)
[1] 198
> plot(simulate(m2))
> stopifnot(logLik(m2)==-out$value)
> 
> m2s <- nlf_objfun(m2,tensor=TRUE,period=10,seed=426094906L)
> plot(sapply(seq(-1,1,by=0.1),function(x)m2s(c(x,0))))
> subplex(par=guess,fn=m2s,control=list(reltol=1e-3)) -> out
> stopifnot(out$convergence == 0)
> m2s(out$par)
[1] 197
> plot(simulate(m2s))
> 
> m2t <- nlf_objfun(m2s,tensor=FALSE,seed=426094906L,fail.value=1e9)
> plot(sapply(seq(-1,1,by=0.1),function(x)m2t(c(x,0))))
> subplex(par=guess,fn=m2t,control=list(reltol=1e-3)) -> out
> stopifnot(out$convergence == 0)
> m2t(out$par)
[1] 199
> plot(simulate(m2t))
> plot(pfilter(m2t,dmeasure=ou2@dmeasure,Np=100))
> m2t(NA)
[1] 1e+09
> 
> nlf_objfun(ou2,lags=c(1,2,3),ti=100,tf=500)
<object of class 'nlf_objfun'>
> nlf_objfun(ou2,lags=c(1,2,3),est=estnames,ti=100,tf=500)
<object of class 'nlf_objfun'>
> nlf_objfun(ou2,lags=c(1,2,3),est=NULL,ti=100,tf=500)
<object of class 'nlf_objfun'>
> try(nlf_objfun(ou2,lags=c(1,2,3),est="bob",ti=100,tf=500))
Error : in 'nlf_objfun': parameter 'bob' not found in 'params'.
> try(nlf_objfun(ou2,lags=list(1,2,3),est=NULL,ti=100,tf=500))
Error : in 'nlf_objfun': 'lags' must be positive integers.
> try(nlf_objfun(ou2,lags=c(-1,2,3),est=estnames,ti=100,tf=500))
Error : in 'nlf_objfun': 'lags' must be positive integers.
> try(nlf_objfun(ou2,lags=c(),est=estnames,ti=100,tf=500))
Error : in 'nlf_objfun': 'lags' must be positive integers.
> try(nlf_objfun(ou2,lags="of course",est=estnames,ti=100,tf=500))
Error : in 'nlf_objfun': 'lags' must be positive integers.
> try(nlf_objfun(ou2,lags=NULL,est=estnames,ti=100,tf=500))
Error : in 'nlf_objfun': 'lags' must be positive integers.
> try(nlf_objfun(ou2,lags=c(1,2,3),est=estnames,ti=-10,tf=500))
Error : in 'nlf_objfun': 'ti' must be a single numeric value larger than 't0'.
> try(nlf_objfun(ou2,lags=c(1,2,3),est=estnames,ti=NULL,tf=500))
Error : in 'nlf_objfun': 'ti' must be a single numeric value larger than 't0'.
> try(nlf_objfun(ou2,lags=c(1,2,3),est=estnames,ti=NA,tf=500))
Error : in 'nlf_objfun': 'ti' must be a single numeric value larger than 't0'.
> try(nlf_objfun(ou2,lags=c(1,2,3),est=estnames,ti=c(12,16),tf=500))
Error : in 'nlf_objfun': 'ti' must be a single numeric value larger than 't0'.
> try(nlf_objfun(ou2,lags=c(1,2,3),est=estnames,ti=100,tf=NULL))
Error : in 'nlf_objfun': 'tf' must be a single numeric value larger than 'ti'.
> try(nlf_objfun(ou2,lags=c(1,2,3),est=estnames,ti=100,tf=NA))
Error : in 'nlf_objfun': 'tf' must be a single numeric value larger than 'ti'.
> try(nlf_objfun(ou2,lags=c(1,2,3),est=estnames,ti=100,tf=c(1,2,3)))
Error : in 'nlf_objfun': 'tf' must be a single numeric value larger than 'ti'.
> try(nlf_objfun(ou2,lags=c(1,2,3),est=estnames,ti=100,tf=list(5)))
Error : in 'nlf_objfun': 'tf' must be a single numeric value larger than 'ti'.
> try(nlf_objfun(ou2,lags=c(1,2,3),est=estnames,ti=100,tf=Inf))
Error : in 'nlf_objfun': 'tf' must be a single numeric value larger than 'ti'.
> try(nlf_objfun(ou2,lags=c(1,2,3),est=estnames,ti=100,tf="yes"))
Error : in 'nlf_objfun': 'tf' must be a single numeric value larger than 'ti'.
> try(nlf_objfun(ou2,lags=c(1,2,3),est=estnames,ti=100,tf=50))
Error : in 'nlf_objfun': 'tf' must be a single numeric value larger than 'ti'.
> try(nlf_objfun(ou2,lags=c(1,2,3),est=estnames,ti=100,tf=150))
Error : in 'nlf_objfun': insufficiently long simulated time series: increase 'tf' to at least 220.
> nlf_objfun(ou2,lags=c(1,2,3),est=estnames,ti=100,tf=300)
<object of class 'nlf_objfun'>
Warning message:
in 'nlf_objfun': insufficiently long simulated time series: consider increasing 'tf' to 460 or larger. 
> try(nlf_objfun(ou2,lags=c(1,2,3),nrbf=2,ti=100,tf=500))
Error : in 'nlf_objfun': 'nrbf' must be at least 4.
> try(nlf_objfun(ou2,lags=c(1,2,3),nrbf=NA,ti=100,tf=500))
Error : in 'nlf_objfun': 'nrbf' must be at least 4.
> try(nlf_objfun(ou2,lags=c(1,2,3),nrbf=NULL,ti=100,tf=500))
Error : in 'nlf_objfun': 'nrbf' must be at least 4.
> try(nlf_objfun(ou2,lags=c(1,2,3),nrbf="4",ti=100,tf=500))
Error : in 'nlf_objfun': 'nrbf' must be at least 4.
> try(nlf_objfun(ou2,lags=c(1,2,3),period=Inf,ti=100,tf=500))
Error : in 'nlf_objfun': 'period' must be single finite number or NA.
> nlf_objfun(ou2,lags=c(1,2,3),period=-5,ti=100,tf=500)
<object of class 'nlf_objfun'>
> try(nlf_objfun(ou2,lags=c(1,2,3),ti=100,tf=500,transform.data=3))
Error : in 'nlf_objfun': object 'transform.data' of mode 'function' was not found
> try(nlf_objfun(ou2,lags=c(1,2,3),ti=100,tf=500,transform.data=list()))
Error : in 'nlf_objfun': object 'transform.data' of mode 'function' was not found
> try(nlf_objfun(ou2,lags=c(1,2,3),ti=100,tf=500,transform.data="bob"))
Error : in 'nlf_objfun': object 'bob' of mode 'function' was not found
> try(nlf_objfun(ou2,lags=c(1,2,3),ti=100,tf=500,transform.data=NULL))
Error : in 'nlf_objfun': object 'transform.data' of mode 'function' was not found
> try(nlf_objfun(ou2,lags=c(1,2,3),ti=100,tf=500,transform.data=NA))
Error : in 'nlf_objfun': object 'transform.data' of mode 'function' was not found
> try(nlf_objfun(ou2,lags=c(1,2,3),ti=100,tf=500,transform.data=function(x,y)x+y))
Error : in 'nlf_objfun': in 'transform.data': argument "y" is missing, with no default
> try(nlf_objfun(ou2,lags=c(1,2,3),ti=100,tf=500,fail.value=c(10,20)))
Error : in 'nlf_objfun': 'fail.value' should be a single (large) number or 'NA'.
> try(nlf_objfun(ou2,lags=c(1,2,3),ti=100,tf=500,fail.value=NULL))
Error : in 'nlf_objfun': 'fail.value' should be a single (large) number or 'NA'.
> try(nlf_objfun(ou2,lags=c(1,2,3),ti=100,tf=500,fail.value="no"))
Error : in 'nlf_objfun': 'fail.value' should be a single (large) number or 'NA'.
> capture.output(nlf_objfun(ou2,lags=c(1,2,3),ti=100,tf=500,fail.value=10,verbose=TRUE)) -> out
Warning message:
in 'nlf_objfun': 'fail.value' should be a large number or 'NA'. 
> stopifnot(sum(grepl("logql = ",out))==1)
> 
> po <- ou2
> time(po) <- c(1:5,8:10)
> try(po |> nlf_objfun(lags=c(1,2,3),period=5,ti=100,tf=500))
Error : in 'nlf_objfun': NLF requires uniform sampling frequency.
> 
> po <- ou2
> po@data[2,15] <- NA
> stopifnot(po |> nlf_objfun(lags=c(1,2,3),ti=100,tf=500) |> logLik() |> is.na())
> 
> po <- ou2
> stopifnot(po |> nlf_objfun(rmeasure=NULL,lags=c(1,2,3),ti=100,tf=500) |> logLik() |> is.na())
Warning message:
'rmeasure' unspecified: NAs generated. 
> 
> try(po |> nlf_objfun(covar=covariate_table(t=0:100,Z=100,times="t"),ti=100,tf=500))
Error : in 'nlf_objfun': NLF is incompatible with time-varying covariates.
> 
> dev.off()
null device 
          1 
> 
